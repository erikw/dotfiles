*vim-java-javadoc*


Javadoc Support
***************

*:JavaDocComment*


Commenting
==========

Eclim provides the :JavaDocComment command which will add or update
the javadoc comments for the element under the cursor.

Note: The insertion of javadoc comments is done externally with Eclipse
  and with that comes a couple caveats (|vim-issues|).


Configuration
=============

Eclim Settings

- org.eclim.user.name - Used as the name portion of the author tag.
  Consult the settings page (|vim-settings|) for more info.

- org.eclim.user.email - Used as the email portion of the author tag.
  Consult the settings page (|vim-settings|) for more info.

*:JavaDocSearch*


Searching
=========

Eclim supports searching of javadocs just like you would search the
source code (|vim-java-search|).

The only difference is that you use :JavaDocSearch instead of
:JavaSearch.

The results will be displayed in a window and you can simply hit
<enter> on an entry to open it using the browser you configured via
g:EclimBrowser (|g-eclimbrowser|).

The locations of the javadocs are determined via your Eclipse
project's .classpath file.  For each library entry you can define a
javadoc attribute that points to the base url of the javadoc (http,
file, etc).

>

   <classpathentry kind="lib" path="lib/hibernate-3.0.jar">
     <attributes>
       <attribute value="http://hibernate.org/hib_docs/v3/api" name="javadoc_location"/>
     </attributes>
   </classpath>

<


Warning: Searching for classes in the jdk requires the JRE_CONTAINER entry in
  your .classpath file.  Some third party plugins may create java
  projects with this entry ommitted (like android projects created by
  the Android Development Tools).  In these cases you can manually add
  the following to your project's .classpath file:>

     <classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>

  <



Configuration
=============

Vim Variables

*g:EclimJavaDocSearchSingleResult*

- g:EclimJavaDocSearchSingleResult (Default: 'open') - Determines what
  action to take when only a singe result is found.

  Possible values include:

  - 'open' - open the result in a browser.

  - 'lopen' - open the temp window to display the result.

- g:EclimLocationListHeight (Default: 10) - Sets the height in lines
  of the location list window when eclim opens it to display search
  results.

*:Javadoc*


Executing javadoc
=================

To run the javadoc utility on your project's source code, you may use
the :Javadoc command, which with no arguments will execute javadoc
against all your project's source code (as specified by any optional
settings described below).

If you wish to run javadoc only against one or more files, you can
supply the project relative paths as arguments to the :Javadoc command
and only those files will be used.

Note: Please note that this command is not intended to be a full
  replacement for javadoc support provided by more comprehensive build
  tools like ant or maven.


Configuration
=============

Eclim Settings

- org.eclim.java.doc.dest (Default: doc) - The project relative
  directory where the javadocs with be written to.

- org.eclim.java.doc.packagenames - Optional space separated list of
  package names to run javadoc against.

- org.eclim.java.doc.sourcepath - The project relative javadoc
  sourcepath to use.  This should be a space separated list of project
  relative source directories which you want javadoc to be executed
  against.  When unset, all your configured source directories will be
  used.

vim:ft=eclimhelp