*vim-python-index*


Python
******

- Python Validation ()
  - Configuration (#configuration)
- Python Code Completion ()
- Python Search ()
  - Element Search (#element-search)
  - Configuration (#configuration)
- Django ()
  - Django manage.py (#django-manage-py)
  - Configuration (#configuration)
  - Django python support (#django-python-support)
  - Django html template support (#django-html-template-support)
  - Configuration (#id1)
- Python Validation (|vim-python-validate|)

- Python Code Completion (|vim-python-complete|)

- Python Search (|vim-python-search|)

- Django (|vim-python-django|)

*vim-python-rope*


Rope
====

Contrary to other languages supported by eclim, python support is not
provided by an eclipse plugin.  When evaluating the currently
available eclipse plugins for python, namely pydev and dltk, we found
that they had downsides making them less than ideal candidates for
inclusion in eclim.

After evaluating the eclipse plugins, attention turned to pure python
solutions, which then lead to the eventual choice: rope
(http://rope.sourceforge.net/)

Minimum Requirements:
   - python 2.5 or greater

   - vim compiled with python support

     Warning: Windows Users: gvim for windows does have python support, but
       at the time of this writing, it is compiled against python 2.4.
       So if you want to leverage eclim's rope support, you will need
       to recompile gvim against python 2.5 or higher or find a site
       which provides a pre-compiled version for you.  Here are is one
       such site providing binaries for python 2.5 and 2.6: gooli.org
       (http://www.gooli.org/blog/gvim-72-with-python-2526-support-
       windows-binaries/)

Functionality Utilizing Rope
   - code completion (|vim-python-complete|)

   - find element definition (|vim-python-search|)

   - |:PyLint|

Configuration

When using functionality that in turn utilizes rope, eclim attempt to
make the usage of rope as transparent as possible.  Eclim will
automatically create the rope project in the same directory as your
rope project, resulting in a new directory and file
(.ropeproject/config.py).  Once that file has been created you can
then modify it to suit your environment.

For example, lets say you have another python project which is not on
your python path, but you wish to have :PyLint, code completion, etc.
recognize that project.  To do so you can open the
.ropeproject/config.py file and inside the set_prefs method you will
see a commented example of how you can add paths to the rope
'python_path'.  You can then add your project like so:

>

   prefs.add('python_path', '~/myotherproject')

<

vim:ft=eclimhelp