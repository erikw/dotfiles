# Erik Westrup's tmux configuration.

# Modeline {
# vi: foldmarker={,} foldmethod=marker foldlevel=0 tabstop=8
# }

# Reset all options. Useful when re-sourcing this during an active session.
# Check if it exist first, as it won't the first time until bootstrap.
if-shell "test -e ~/.config/tmux/plugins/tmux-reset/tmux-reset" \
	"source-file ~/.config/tmux/plugins/tmux-reset/tmux-reset"

# General {
#set-option -g default-command $SHELL			# Set default command to execute. Normally this does not have to be set, but is set here to circumvet strange issue on macOS where a loginshell with zsh starts with $?=1. TODO remove this when this mysterious bug has disappeared.
set-option -g status-keys vi				# Use Vi bindings in tmux command prompt.
set-option -g history-limit 131072			# Number of terminal lines per window to keep. (2^17)
set-option -g buffer-limit 32				# Number of copy buffers.
set-option -g bell-action any				# Any window can cause bell action.
set-option -g visual-bell both				# Use both audioal and visual bell.
set-option -g display-time 1300				# Time (ms) the message bar is shown.

# Neovim recommendations
set-option -sg escape-time 10				# Decrease escape time. Per recommendation for neovim: https://github.com/neovim/neovim/wiki/FAQ
set-option -g focus-events on				# To enable 'autoread' functin in nvim.
set-option -ga terminal-overrides ',xterm-256color:Tc'  # Enable truecolors.


set-option -g set-clipboard				# Try to set the X clipboard. Requires a modification in ~/.Xresources. Does not seems to work.
set-option -g wrap-search off				# Don't wrap search in scroll buffer.
set-window-option -g buffer-limit 64			# Number of clipboard copy buffers to save in choose-buffer.

# Window {
	set-window-option -g mode-keys vi			# Use Vi bindings in copy and choice mode.
	set-window-option -g monitor-activity on		# Monitor windows for activity.
# }
# }

# UI {
#source-file ~/.repos/tmux-colors-solarized/tmuxcolors-dark.conf	# Load colorscheme.
source-file ~/.local/state/tmux/tmux-dark-notify-theme.conf		# Still needed because if re resource tmux.conf, the tmux-reset will have erased the set theme.

set-option -g default-terminal "screen-256color"		# Use colors.
set-option -g visual-activity on				# Notify visually events in monitor-activity enabled windows.
set-option -g visual-bell off					# Don't disturb.
set-option -g renumber-windows on				# Automatically renumber windows when closing a window.

# Window {
	set-window-option -g mouse on				# Enable mouse actions.
	set-window-option -g clock-mode-style 24		# Use 24 hour clock.
	set-window-option -g allow-rename on			# Allow programs to rename titles.
	set-window-option -g automatic-rename on		# Rename titles automatically.
# }

set-option -g status on					# Always show the status bar.
set-option -g status-position "bottom"			# Position of the status bar.
set-option -g status-justify "centre"			# Justification of the window list.
set-option -g status-interval 15			# Update interval in seconds for status bar.

#  Left status {
	set-option -g status-left-length 90
	# Using #(hostname -s) rather than #{E:host} to strip dns suffix.
	#set-option -g status-left "prefix=#{E:client_prefix} | #{E:session_name} @ #(hostname -s)"
#  }

#  Right status {
	set-option -g status-right-length 120
	set-option -g status-right "Continuum interval: #{continuum_status} | #(date '+%Y-%m-%d | %a W%V | %H:%M')"
# }
# tmux-powerline {
	#bind C-[ run '$HOME/src/github.com/erikw/tmux-powerline/mute_powerline.sh left'		# Mute left statusbar.
	#bind C-] run '$HOME/src/github.com/erikw/tmux-powerline/mute_powerline.sh right'		# Mute right statusbar.
	#set-option -g status-left "#($HOME/src/github.com/erikw/tmux-powerline/powerline.sh left)"
	#set-option -g status-right "#($HOME/src/github.com/erikw/tmux-powerline/powerline.sh right)"
	#set-hook -g session-created 'run-shell "$HOME/src/github.com/erikw/tmux-powerline/powerline.sh init"' # prettifies the window-status segments
# }
# }

# Bindings {
# GNU Screen-like {
unbind-key C-b						# Unbind default prefix key.
set-option -g prefix C-a				# Seconday prefix key like GNU Screen.
bind-key a send-prefix					# Send ^A.
bind-key b send-prefix					# Send ^B.
bind-key C-a last-window				# Toogle last window.

unbind-key *
bind-key * list-clients					# List connected clients.

unbind-key " "
bind-key " " next-window				# Go to next window.
unbind-key BSpace
bind-key BSpace previous-window				# Go to previous window.
unbind-key ^@
bind-key ^@ next-layout					# Toggle default pane layouts.

bind-key Q confirm-before "kill-session"		# Kill active session.

unbind-key k
bind-key k confirm-before -p "kill-pane #P? (y/n)"  "kill-pane"			# Kill active pane.
bind-key K confirm-before -p "kill-window #I? (y/n)"  "kill-window"		# Kill active window.
# }

# Vi-like {
bind-key M-h select-pane -L		# Select pane left.
bind-key M-j select-pane -D		# Select pane down.
bind-key M-k select-pane -U		# Select pane up.
bind-key M-l select-pane -R		# Select pane right.
# }

# Create a new session.
bind-key C-n command-prompt -p "New session:" "new-session -s '%%'"

# Open a new window with CWD set-option in PS1.
unbind-key c
bind-key c new-window -c '#{pane_current_path}'		# Open new window with curret pane's path. Since v1.9a.
bind-key M-c new-window -a -c '#{pane_current_path}'	# Open new window with curret pane's path, next to current one.
# With tmux-ressurect, the parent CWD is not restored. Make sure to open $HOME here.
bind-key C new-window -c ~/				# Open new window to working directory.
bind-key M-C new-window -a -c ~/			# Open new window to working directory, next to current one.

bind-key - split-window -v -c '#{pane_current_path}' # Split horizontally.
bind-key | split-window -h -c '#{pane_current_path}' # Split vertically.

bind-key N select-pane -t:.+		# Cycle panes forwards.
bind-key P select-pane -t:.-		# Cycle panes backwards.

# Shortcut for swapping windows.
bind-key S command-prompt -p "swap with window number:" "swap-window -t '%%'"

# Move window left/right in list. Can hold shift down and press left/right multiple times for many moves.
bind-key -r S-Left swap-window -t -1\; previous-window
bind-key -r S-Right swap-window -t +1\; next-window

# Open urlview for current buffer.
# Replaced with tmux-fzf-url.
#bind-key O capture-pane \; save-buffer /tmp/${USER}_tmux-urlview \; split-window -v -l 10 "urlview /tmp/${USER}_tmux-urlview"

bind-key @ command-prompt -p "create pane from window:" "join-pane -s ':%%'"	# Join window/pane to this window. The oposite of '<prefix>!'.
bind-key R source-file $XDG_CONFIG_HOME/tmux/tmux.conf\; display-message "sourced $XDG_CONFIG_HOME/tmux/tmux.conf"	# Reload tmux configuration file.
bind-key C-t new-window  -n "tmux.conf" "$EDITOR $XDG_CONFIG_HOME/tmux/tmux.conf"	# Edit tmux configuration file.
bind-key M kill-session -C							# Clears all alerts for current session
bind-key C-m set-window-option monitor-activity					# Toggle activity monitoring for the current window.
bind-key m command-prompt -p "man"  "split-window -h 'exec man %%'"		# Open man page in a split.

# Toggle logging of pane to file.
bind-key H pipe-pane -o "exec cat >>$XDG_STATE_HOME/tmux/'#W-tmux.log'" \; display-message 'Toggled logging to file.'

# Copy tmux paste buffer to CLIPBOARD. Pipe xclip to /dev/null so it does not hang in input.
#bind-key C-c run "tmux show-buffer | xclip -i -selection clipboard >/dev/null 2>&1" \; display-message 'Copied tmux buffer to X clipboard.'	# LINUX-CONFIG
bind-key C-c run "tmux show-buffer | pbcopy >/dev/null 2>&1" \; display-message 'Copied tmux buffer to clipboard.'	# MACOS-CONFIG
# Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer.
#bind-key C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"		# LINUX-CONFIG
bind-key C-v run "tmux set-buffer -- \"$(pbpaste)\"; tmux paste-buffer"	# MACOS-CONFIG
# }

# Tmux Plugin Manager (TPM) {
# Keybindings: https://github.com/tmux-plugins/tpm#key-bindings

# List of plugins
# Supports `github_username/repo` or full git repo URLs
# After adding new plugin: <prefix>+I
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @plugin 'hallazzang/tmux-reset'
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @plugin 'roosta/tmux-fuzzback'
set -g @plugin 'thuanpham2311/tmux-fzf-session-switch'
set -g @plugin 'erikw/tmux-dark-notify'

# Disabled plugins
#set -g @plugin 'tmux-plugins/tmux-urlview'
#set -g @plugin 'tmux-plugins/tmux-sessionist'
#set -g @plugin 'tmux-plugins/tmux-copycat'
#set -g @plugin 'tmux-plugins/tmux-sidebar'

# Plugin configuration {
## tmux-resurrect
set -g @resurrect-capture-pane-contents 'on'

## tmux-continuum
set -g @continuum-save-interval '5'  # Default 15 minutes.
set -g @continuum-restore 'on'  # Automatic restore on tmux server start.
# Start terminal on login. See https://github.com/tmux-plugins/tmux-continuum/blob/master/docs/automatic_start.md
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'

##  tmux-fzf-url
set -g @fzf-url-bind 'O'

##  tmux-fuzzback
# Default mapping is prefix-? which conflic with default mapping for showing bindings.
set -g @fuzzback-bind 'M-/'
# Show search in pop up insteade of a pane.
set -g @fuzzback-popup 1
set -g @fuzzback-popup-size '90%'

## tmux-fzf-session-switch
set -g @fzf-goto-session 's' # Default is C-f
set -g @fzf-goto-win-height 20
set -g @fzf-goto-session-only 'true'

## tmux-dark-notify
set -g @dark-notify-theme-path-light '$HOME/.repos/tmux-colors-solarized/tmuxcolors-light.conf'
set -g @dark-notify-theme-path-dark '$HOME/.repos/tmux-colors-solarized/tmuxcolors-dark.conf'
# }

# Bootstrap tpm & plugins.
# Sef: https://github.com/tmux-plugins/tpm/blob/master/docs/automatic_tpm_installation.md
# Ref: https://github.com/tmux-plugins/tpm/issues/39#issuecomment-120437818
set-environment -g TMUX_PLUGIN_MANAGER_PATH "~/.config/tmux/plugins"
if-shell "test ! -d ~/.config/tmux/plugins/tpm" \
   "run-shell 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

# Initializes tpm. Must be the last line.
run-shell '~/.config/tmux/plugins/tpm/tpm'
# }
