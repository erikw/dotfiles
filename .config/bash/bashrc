# Erik Westrup's bashrc.
# NOTE Login shells read ~/.profile, normal and interactive shells read ~/.bashrc.

# Modeline {
#	vi: foldmarker={,} filetype=sh foldmethod=marker foldlevel=0: tabstop=4 shiftwidth=4:
# }

# Source global profile.
# NOTE resets PATH
if [ -f /etc/profile ] && [ -r /etc/profile ]; then
	source /etc/profile
fi


if [ -f ${XDG_CONFIG_HOME:-$HOME/.config}/shell/commons ]; then
	export SHELL_NAME=bash
	export completion_func=complete
	source ${XDG_CONFIG_HOME:-$HOME/.config}/shell/commons
fi

# Set Vi command line editing mode. Not needed because it's set in ~/.inputrc.
#set -o vi

# Completion {
	# Complete @hostnames in a file with /ets/hosts format.
	HOSTFILE=/etc/hosts

	# Enable bash tab completion. Not needed with package 'bash-completion' installed.
	#complete -cf sudo
	#complete -cf man

	# Use bash-completion, if available.
	if shell_is_bsd; then
		[[ $PS1 && -f /usr/local/etc/bash_completion ]] &&  . /usr/local/etc/bash_completion
	else
		[[ $PS1 && -f /usr/share/bash-completion/bash_completion ]] && . /usr/share/bash-completion/bash_completion
	fi
# }

# History {
	# Where to store the history.
	test -d ${XDG_STATE_HOME:-$HOME/.local/state}/bash || mkdir -p ${XDG_STATE_HOME:-$HOME/.local/state}/bash
	export HISTFILE=${XDG_STATE_HOME:-$HOME/.local/state}/bash/history
	# Number lines to store in active bash session.
	export HISTSIZE=100000
	# Number lines to store in history file after session end.
	export HISTFILESIZE=100000
	# Don't put duplicate commands in the history.
	export HISTCONTROL="erasedups:ignoreboth"
	# Commands to ignore in history.
	# & - Ignore repeated commands.
	# [\s\t]* - Ignore command starting with a space characters.
	export HISTIGNORE="&:[\s\t]*:exit:halt:poweroff:shutdown:reboot:xlogout:pm-hibernate:pm-suspend"
	# Append instead of overwrite history on exit.
	shopt -s histappend
	# Allow multiline commands as one command.
	shopt -s cmdhist
# }

# UI {
	# Source PS1 configuration.
	sourceifexists ${XDG_CONFIG_HOME:-$HOME/.config}/bash/ps1

	# Powerline
	#if [ -n "$POWERLINE_ROOT" ] && [ -d $POWERLINE_ROOT ]; then
		#POWERLINE_BASH_CONTINUATION=1
		#POWERLINE_BASH_SELECT=1
		#source $POWERLINE_ROOT/bindings/bash/powerline.sh
	#fi

	# Check the window size after each command and, if necessary, update the values of LINES and COLUMNS.
	shopt -s checkwinsize
# }

# Programs {
	# Sorce bashmarks.
	# See saved marks in ~/.sdirs
	sourceifexists $HOME/.local/bin/bashmarks.sh

	# Jump shell bookmarks.
	# NOTE moved to ~/.sandboxrc
	#if type jump-bin >/dev/null 2>&1; then
		#source $(jump-bin --bash-integration)/shell_driver
	#fi

	# Gitignore boiler plate.
	#if [ -d $HOME/src/github.com/simonwhitaker/gibo ]; then
		#PATH="$HOME/src/github.com/simonwhitaker/gibo:$PATH"
		#source $HOME/src/github.com/simonwhitaker/gibo/gibo-completion.bash
	#fi

	if [ -d $HOME/.repos/cd-bookmark ]; then
		# sourceifexists not working here...
		#source $HOME/src/github.com/erikw/cd-bookmark/cd-bookmark
		source $HOME/.repos/cd-bookmark/cd-bookmark

		# A modified version of cd-bookmark's _cdbookmarks_bash_completions that can be used to complete bookmarks for aliases (as bash don't complete aliases.)
		# Complete bookmarks for all aliases that take bookmark_id as argument.
		function _cdbookmarks_bash_completions_aliases() {
			if [ "${#COMP_WORDS[@]}" = "2" ]; then
				local comp_word="${COMP_WORDS[1]}"

				if [[ "$comp_word" == */* ]]; then
					local strip_bookmark_id="${comp_word%%/*}"
					local dir_path="${comp_word#*/}"
					local bookmark_dir="$(_cdbookmark_get_bookmark $strip_bookmark_id)"

					if [ -n "$bookmark_dir" ]; then
						bookmark_dir="${bookmark_dir}/${dir_path}"
						local word_list=$(ls -d "${bookmark_dir}"*/ 2>/dev/null | \
						sed -e "s|${bookmark_dir}||" -e 's|/$||' -e "s|^|${comp_word}|")
						COMPREPLY=($(compgen -W "${word_list[*]}" -- "${comp_word}"))
					fi
				else
					local word_list="$(_cdbookmark_list_bookmark_id)"
					COMPREPLY=($(compgen -W "${word_list[*]}" -- "${comp_word}"))
				fi
			fi
		}
		complete -F _cdbookmarks_bash_completions_aliases g s p d
	fi
# }

#sourceifexists ${XDG_CONFIG_HOME:-$HOME/.config}/X11/startx.sh
