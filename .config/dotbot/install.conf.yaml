- plugins:
    - .local/repos/dotbot-plugins/asdf
    - .local/repos/dotbot-plugins/brewfile
    - .local/repos/dotbot-plugins/crontab
    - .local/repos/dotbot-plugins/firefox
    - .local/repos/dotbot-plugins/ghq
    - .local/repos/dotbot-plugins/if

- defaults:
    link:
      relink: true
      force: true # For GitHub Codespaces to overwrite autocreated by them: .bashrc, .config
    create:
      mode: 0700
    shell:
      stderr: true
      stdout: true

- clean: ["~"]

# Remove existing files in GitHub CodeSpaces. Using force relink is not enough as I dont' have .zshrc in my repo, but the one from Codespaces prevents zsh to look for my XDG zsh config.
- if:
    cond: test "$CODESPACES" = true
    met:
      - shell:
          # APT packaes needed for dotfiles to work and standard exepcted shell tools.
          # NOTE avoid piling stuff up, tools needed for development should be in each repo's devcontainer.json!
          - sudo apt-get update && sudo apt-get install -y cloc direnv fd-find rename ripgrep tig
          # NOPE fzf: apt-get version is too old, use go instead. Apt-get verison (0.44) is given but $(fzf --zsh) was added in 0.48. Ref: https://github.com/junegunn/fzf/issues/2599#issuecomment-2120141816
          # TODO switch to use apt-get when the included version supports $(fzf --zsh). fzf requires go >=1.20 but some devcontainer images like python image has no preinstalled go, and the apt one is 1.19. Thus this command would fail.
          - go install github.com/junegunn/fzf@latest
          # Set default shell to zsh, even is VSCode is set to have a default terminal profile zsh. Why? So that $SHELL is set to zsh and can be used in scripts. Ref: https://docs.github.com/en/codespaces/customizing-your-codespace/changing-the-shell-in-a-codespace#setting-the-default-shell-over-ssh
          # NOPE this still does not update $SHELL in Codespaces, even after rebooting vm. Resort to settings VSCode envvar.
          # - test "$SHELL" = zsh || sudo chsh "$(id -un)" --shell "/usr/bin/zsh"
          # Delete ~/.config so we can link in our own. Needs to be done close our linking as the dir is regularily recreated.
          # - rm -rf $HOME/.config

- link:
    ~/.bashrc: .bashrc
    ~/.config: .config
    ~/.hushlogin: .hushlogin
    ~/.local/repos:
      path: .local/repos
      create: true
    ~/.zshenv: .zshenv
    ~/bin: bin
    "~/Library/Application Support/Code": .config/Code/User

- create:
    - ~/dl
    - ~/pub
    - ~/src
    - ~/tmp
    - ~/.local/share/tig # Make tig use $XDG_DATA_HOME. Reference: https://wiki.archlinux.org/title/XDG_Base_Directory#Partial

# TODO use ifmacos when bug fixed. https://github.com/ssbanerje/dotbot-ifplatform/pull/4#issuecomment-1532112176
#- ifmacos:
#    - brewfile:
#        file: .config/homebrew/Brewfile
- if:
    cond: test $(uname) = Darwin
    met:
      - brewfile:
          file: .config/homebrew/Brewfile

- if:
    cond: "test -e ~/.config/homebrew/Brewfile.$(hostname)"
    met:
      - brewfile:
          file: "~/.config/homebrew/Brewfile.$(hostname)"

# TODO use ifmacos when bug fixed. https://github.com/ssbanerje/dotbot-ifplatform/pull/4#issuecomment-1532112176
- if:
    cond: test $(uname) = Darwin
    met:
      - shell:
          - command: ~/bin/macos_config.sh
            description: Running macos_config.sh
            stdin: true
          - command: ~/bin/macos_install.sh
            description: Running macos_config.sh
          - command: ln -s ~/Downloads ~/dl
          - command: ln -s ~/Documents ~/doc
          - command: ln -s ~/Library/Mobile\ Documents/com~apple~CloudDocs/ ~/icloud
            description: Symlink icloud to ~/
          # Don't double-symlink via ~/icloud, because Stacks in Dock.app won't follow double-symlinks.
          - command: ln -s ~/Library/Mobile\ Documents/com~apple~CloudDocs/bak ~/bak
          - command: ln -s ~/Library/Mobile\ Documents/com~apple~CloudDocs/media ~/media
          - command: ln -s ~/Library/Mobile\ Documents/com~apple~CloudDocs/work ~/work

# TODO conditionally execute:  ~/bin/windows_install.ps1
#      and migrate to use https://github.com/JamJar00/dotbot-scoop
# ifplatform has no ifwindows
# But could do something like
#- if:
#    cond: 'echo "$OSTYPE | grep -q "msys*"'

# TODO Linux: set up one of the apt-get plugins https://github.com/anishathalye/dotbot/wiki/Plugins possibly with the sudo plugin.
# and base it of ~/doc/tech/irvine/arch_packages.txt

# Guard against CodeSpaces as it will slow down set process for a new container significantly, and the languages will already be installed in the universal devcontainer anyways.
- if:
    cond: test "$CODESPACES" != true
    met:
      - asdf:
          - plugin: ruby
            versions:
              - latest
            global: latest
          - plugin: python
            versions:
              - latest
            global: latest
          - plugin: golang
            versions:
              - latest
            global: latest
          - plugin: nodejs
            versions:
              - latest
            global: latest
          #- plugin: java
          #  versions:
          #    - latest
          #  global: latest

- if:
    cond: test "$CODESPACES" != true
    met:
      - crontab:
          - cron: "@monthly"
            command: if_fail_do_notification crontab_backup.sh
          - cron: 0 13 * * *
            command: if_fail_do_notification dotfiles_backup_local.sh

- firefox:
    user.js: .config/firefox/user.js

# Oly for desktop machines, not CodeSpaces.
- if:
    cond: test "$CODESPACES" != true
    met:
      - ghq:
          - repo: erikw/templates
            flags: [-p]
          - repo: erikw/erikw
            flags: [-p]
          - repo: erikw/erikw.me-jekyll
            flags: [-p]
